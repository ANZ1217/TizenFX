/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*************************************************************************************
Tizen TV_General Guide_GUI Guideline_v1.0_140508.ppt page 90  style 1text
Tizen TV_General Guide_GUI Guideline_v1.0_140508.ppt page 91  style 1text.1icon
***************************************************************************************/

group { name: "elm/ctxpopup/bg/default";
   parts {
      part { name: "ctxpopup_bg"; type: RECT;  mouse_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 64;
         }
      }
   }
   programs {
      program { name: "clicked_event";
         signal: "mouse,clicked,1";
         source: "ctxpopup_bg";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "show";
         signal: "elm,state,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
      program { name: "hide";
         signal: "elm,state,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "ctxpopup_bg";
         transition: LINEAR 0.25;
      }
   }
}

group { name: "elm/ctxpopup/base/default";
   parts {
      part { name: "base"; type: RECT;
         clip_to: "clip";
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1 { to:"base"; offset: 8 6; }
            rel2 { to:"base"; offset: -7 -8; }
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "clip"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
            rel1.offset: -20 -20;
            rel2.offset: 19 19;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }

      // 17x10
      part { name: "arrow_area_left"; type: SPACER;
         description { state: "default" 0.0;
            min: 17 10;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1.to: "base";
            rel1.offset: 2 5;
            rel2.to: "base";
            rel2.offset: 2 -6;
            rel2.relative: 0.0 1.0;
         }
      }
      part { name: "elm.swallow.arrow_left"; type: SWALLOW; mouse_events: 0;
         clip_to: "clip";
         dragable.x: 1 1 0;
         dragable.y: 1 1 0;
         dragable.confine: "arrow_area_left";
         description { state: "default" 0.0;
            min: 9 13;
            fixed: 1 1;
         }
      }

      part { name: "arrow_area_right"; type: SPACER;
         description { state: "default" 0.0;
            min: 17 10;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.to: "base";
            rel1.offset: -3 5;
            rel1.relative: 1.0 0.0;
            rel2.to: "base";
            rel2.offset: -3 -6;
         }
      }
      part { name: "elm.swallow.arrow_right"; type: SWALLOW; mouse_events: 0;
         clip_to: "clip";
         dragable.x: 1 1 0;
         dragable.y: 1 1 0;
         dragable.confine: "arrow_area_right";
         description { state: "default" 0.0;
            min: 9 13;
            fixed: 1 1;
         }
      }

      // 10x17
      part { name: "arrow_area_up"; type: SPACER;
         description { state: "default" 0.0;
            min: 10 17;
            fixed: 1 1;
            align: 0.5 1;
            rel1.to: "base";
            rel1.offset: 5 3;
            rel2.to: "base";
            rel2.offset: -6 3;
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "elm.swallow.arrow_up"; type: SWALLOW; mouse_events: 0;
         clip_to: "clip";
         dragable.x: 1 1 0;
         dragable.y: 1 1 0;
         dragable.confine: "arrow_area_up";
         description { state: "default" 0.0;
            min: 11 9;
            fixed: 1 1;
         }
      }

      part { name: "arrow_area_down"; type: SPACER;
         description { state: "default" 0.0;
            min: 10 17;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1.to: "base";
            rel1.offset: 5 -4;
            rel1.relative: 0.0 1.0;
            rel2.to: "base";
            rel2.offset: -6 -4;
         }
      }
      part { name: "elm.swallow.arrow_down"; type: SWALLOW; mouse_events: 0;
         clip_to: "clip";
         dragable.x: 1 1 0;
         dragable.y: 1 1 0;
         dragable.confine: "arrow_area_down";
         description { state: "default" 0.0;
            min: 11 9;
            fixed: 1 1;
         }
      }
   }
   programs {
      program {
         signal: "elm,state,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: LINEAR 0.2;
         target: "clip";
         target: "event";
      }
      program {
         signal: "elm,state,hide"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.3;
         target: "clip";
         target: "event";
         after: "hide2";
      }
      program { name: "hide2";
         action: SIGNAL_EMIT "elm,action,hide,finished" "elm";
      }

   }
}

group { name: "elm/ctxpopup/arrow/default";
   images {
      image: "popover_arrow.png" COMP;
   }
   parts {
      part { name: "ctxpopup_arrow";
         type: IMAGE;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 17 10;
            fixed: 1 1;
            visible: 0;
            align: 0.5 0.5;
            image.normal: "popover_arrow.png";
         }
         description { state: "left" 0.0;
            inherit: "default" 0.0;
            align: 0.0 0.5;
            map.on: 1;
            map.smooth: 1;
            map.rotation.z: 270;
         }
         description { state: "right" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.5;
            map.on: 1;
            map.smooth: 1;
            map.rotation.z: 90;
         }
         description { state: "top" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            align: 0.5 0.0;
         }
         description { state: "bottom" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
            map.on: 1;
            map.smooth: 1;
            map.rotation.z: 180;
         }
      }
   }
   programs {
      program { name: "enable_left_arrow";
         signal: "elm,state,left";
         source: "elm";
         action: STATE_SET "left" 0.0;
         target: "ctxpopup_arrow";
      }
      program { name: "enable_right_arrow";
         signal: "elm,state,right";
         source: "elm";
         action: STATE_SET "right" 0.0;
         target: "ctxpopup_arrow";
      }
      program { name: "enable_top_arrow";
         signal: "elm,state,top";
         source: "elm";
         action: STATE_SET "top" 0.0;
         target: "ctxpopup_arrow";
      }
      program { name: "enable_bottom_arrow";
         signal: "elm,state,bottom";
         source: "elm";
         action: STATE_SET "bottom" 0.0;
         target: "ctxpopup_arrow";
      }
   }
}

group {
   name: "elm/ctxpopup/icon_text_style_item/default";
   alias: "elm/ctxpopup/text_style_item/default";
   alias: "elm/ctxpopup/icon_style_item/default";
   images {
      image: "hoversel_entry_bg.png" COMP;
   }
   parts {
     part { name: "base.pad"; type: SPACER;
           mouse_events: 0;
           description { state: "default" 0.0;
           min: 12 70;
           max: 12 70;
           align: 0 1;
         }
      }

     part { name: "bg"; type: RECT;
        mouse_events: 0;
        description { state: "default" 0.0;
           rel1.to: "base.pad";
           rel1.relative: 1 0;
           min: 300 70;
           max: 300 70;
           color: 0 0 0 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.proxy1.icon";
         type: PROXY;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            max: 20 20;
            fixed : 1 1;
            rel1.to: "elm.swallow.icon";
            rel2.to: "elm.swallow.icon";
            rel1.relative: 1.0 0.0;
            rel2.relative: 2.0 1.0;
            source: "elm.swallow.icon";
            visible: 0;
            align: 0.0 0.5;
         }
      }
      part { name: "elm.proxy2.icon"; type: PROXY;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            min: 20 20;
            fixed : 1 1;
            rel1.to: "elm.proxy1.icon";
            rel2.to: "elm.proxy1.icon";
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            max: 20 20;
            source: "elm.proxy1.icon";
            visible: 0;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.swallow.icon"; type: SWALLOW;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base.pad";
            rel1.relative: 1.0 0.0;
            rel2.to: "base.pad";
            rel2.relative: 1.0 1.0;
            min: 0 0;
            max: 37 37;
            align: 0 0.5;
         }
      }
      part { name: "elm.text"; type: TEXT;  mouse_events: 0;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            min: 1 40;
            fixed: 1 1;
            align: 0 0.5;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.icon";
            rel2.to_x: "elm.proxy2.icon";
            rel2.relative: 1.0 1.0;
            color: 89 89 89 255;
            text {
               font: "FONT_M";
               size: 30;
               align: 0.0 0.5;
               min: 1 1;
               ellipsis: -1;
            }
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 255;
         }
      }
      part { name: "over1"; type: RECT; mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "bottom_line"; type: RECT;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 0 2;
            max: 9999 2;
            fixed: 1 1;
            rel1.to:"over1";
            rel1.relative: 0 1;
            rel1.offset: -32 0;
            rel2.to:"over1";
            color: 222 222 222 255;
         }

      }
      part { name: "over2"; type: RECT; mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 0 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "focus" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "enabled" 0.0;
            color: 127 127 127 127;
         }
      }
      part { name: "blocker";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
         }
         description { state: "enabled" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "focused";
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focus" 0.0;
         target: "over2";
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program{
         name: "item_unclick";
         signal: "mouse,clicked,1";
         source: "over1";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "enabled" 0.0;
         target: "disclip";
         target: "blocker";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disclip";
         target: "blocker";
      }
      program { name: "item_click2";
         signal: "mouse,down,1";
         source: "over2";
         script {
            set_state(PART:"elm.text", "clicked", 0.0);
            set_state(PART:"bg", "clicked", 0.0);
         }
      }
      program { name: "item_unclick2";
         signal: "mouse,up,1";
         source: "over2";
         script {
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"bg", "default", 0.0);
         }
      }
   }
}
group {
   name: "elm/ctxpopup/item_compress/default";
   images {
      image: "hoversel_entry_bg.png" COMP;
   }
   parts {
      part { name: "bg"; type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            min: 25 25;
            max: 25 25;
            align: 0 0.5;
            aspect: 1.0 1.0;
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         clip_to: "disclip";
         scale: 1;
         description { state: "default" 0.0;
            min: 1 40;
            fixed: 0 1;
            align: 0.5 0.5;
            rel1.relative: 1.0 0.0;
            rel1.to: "elm.swallow.icon";
            rel2.relative: 1.0 1.0;
            color: 255 255 255 255;
            text {
               font: "FONT_M";
               size: 30;
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 255;
         }
      }
      part { name: "over1"; type: RECT; mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "enabled" 0.0;
            color: 127 127 127 127;
         }
      }
      part { name: "blocker";
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
         }
         description { state: "enabled" 0.0;
            visible: 1;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "item_unclick";
         signal: "mouse,clicked,1";
         source: "over1";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "enabled" 0.0;
         target: "disclip";
         target: "blocker";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disclip";
         target: "blocker";
      }
      program { name: "item_click2";
         signal: "mouse,down,1";
         source: "over2";
         script {
            set_state(PART:"elm.text", "clicked", 0.0);
            set_state(PART:"bg", "clicked", 0.0);
         }
      }
      program { name: "item_unclick2";
         signal: "mouse,up,1";
         source: "over2";
         script {
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"bg", "default", 0.0);
         }
      }
   }
}
