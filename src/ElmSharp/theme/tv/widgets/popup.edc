/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// MACRO
#define POPUP_BASE_DEFAULT_TEXT_FONT_SIZE_INC 30
#define POPUP_DESCRIPTION_DEFAULT_TEXT_FONT_SIZE_INC 28

#define POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC 688 378
#define POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC 688 378
#define POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MIN_INC 720 0
#define POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MAX_INC 720 648
#define POPUP_BASE_DEFAULT_TITLE_DEFAULT_MIN_INC 670 84
#define POPUP_BASE_DEFAULT_BUTTON_BG_DEFAULT_MIN_INC 688 146

#define POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT "146"

#define POPUP_BUTTON_MIN_SIZE 196 70
#define POPUP_BUTTON_PADDING_SIZE 20 70


// notify
group { name: "elm/notify/center/popup/default";
   alias: "elm/notify/bottom/popup/default";
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC;
         }
         description { state: "landscape" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MAX_INC;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
   }
}

// popup
group { name: "elm/popup/base/default";
   images {
      image: "modal_dialogs_bg.png" COMP;
      image: "round_rectangle_8X8_top.png" COMP;
   }
   data {
      item: "focus_highlight" "on";
      item: "default_orient" "2"; //top, center:1 bottom:2
   }
   styles {
      style { name: "popup_title_style";
         base: "font=Tizen:style=Regular align=center font_size="POPUP_BASE_DEFAULT_TEXT_FONT_SIZE_INC" color=#FFF wrap=mixed ellipsis=1.0 color_class=popup/default/text_maintitle";
         tag:  "br" "\n";
         tag:  "tab" "\t";
      }
   }
   parts {
      part { name: "base";
         scale: 1;
         type: SPACER;
         description { state: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC;
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_LANDSCAPE_MAX_INC;
         }
      }
      part { name: "bg";
         scale: 1;
         type: IMAGE;
         description {
            rel1.to: "base";
            rel2.to: "base";
            image {
               normal: "modal_dialogs_bg.png";
               border: 18 18 15 21;
            }
            color_class: "popup/default/bg_content";
         }
      }
      part { name: "access.outline";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.bg.title";
         type: IMAGE;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.0;
            min: 0 84;
            rel1 {
               relative: 0.0 0.0;
               to: "base";
               offset: 9 6;
            }
            rel2 {
               relative: 1.0 0.0;
               to: "base";
               offset: -10 6;
            }
            image {
               normal: "round_rectangle_8X8_top.png";
               border: 8 8 8 0;
            }
            visible: 0;
            color_class: "popup/default/bg_title";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.text.title";
         type: TEXTBLOCK;
         scale:1;
         description { state: "default" 0.0;
            fixed: 1 1;
            text {
              style: "popup_title_style";
              size: POPUP_BASE_DEFAULT_TEXT_FONT_SIZE_INC;
            }
            rel1.to: "elm.bg.title";
            rel2.to: "elm.bg.title";
         }
      }
      part { name: "access.title";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.bg.title";
            rel2.to: "elm.bg.title";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "show_title_area" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "base";
               to_y: "elm.bg.title";
            }
            rel2.to: "base";
         }
         description { state: "show_action_area" 0.0;
            inherit: "default" 0.0;
            rel1.to: "base";
            rel2 {
               relative: 1.0 0.0;
               to_x: "base";
               to_y: "elm.swallow.action_area.bg";
            }
         }
         description { state: "show_action_title_area" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "base";
               to_y: "elm.bg.title";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "base";
               to_y: "elm.swallow.action_area.bg";
            }
         }
      }
      part { name: "access.body";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.action_area.bg";
         type: RECT;
         scale : 1;
         description { state: "default" 0.0;
            fixed : 1 1;
            align: 0.5 1.0;
            visible: 0;
            rel1 {
               relative: 0.0 1.0;
               to: "base";
            }
            rel2.to: "base";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BUTTON_BG_DEFAULT_MIN_INC;
         }
      }
      part { name: "elm.swallow.action_area";
         type: SWALLOW;
         scale : 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.action_area.bg";
            rel2.to: "elm.swallow.action_area.bg";
         }
      }
   }
   programs {
      program { name: show_title_area;
         signal: "elm,state,title_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.action_area.bg", st, 30, vl);
            if (!strcmp(st, "visible"))
              set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
            set_state(PART:"elm.bg.title", "visible", 0.0);
         }
      }
      program { name: hide_title_area;
         signal: "elm,state,title_area,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.action_area.bg", st, 30, vl);
            if ((!strcmp(st, "visible")) || (!strcmp(st, "landscape_visible")))
              set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"elm.bg.title", "default", 0.0);
         }
      }
      program { name: show_action_area;
         signal: "elm,state,action_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.bg.title", st, 30, vl);
            if ((!strcmp(st, "visible")))
              set_state(PART:"elm.swallow.content", "show_action_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "show_action_area", 0.0);
            set_state(PART:"elm.swallow.action_area.bg", "visible", 0.0);
         }
      }
      program { name: hide_action_area;
         signal: "elm,state,action_area,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.bg.title", st, 30, vl);
            if ((!strcmp(st, "visible")))
              set_state(PART:"elm.swallow.content", "show_title_area", 0.0);
            else
              set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"elm.swallow.action_area.bg", "default", 0.0);
         }
      }
      program { name: "change_to_landscape";
         action: STATE_SET "landscape" 0.0;
         target: "base";
         after: "orientation_change";
      }
      program { name: "orientation_change";
         action: SIGNAL_EMIT "elm,state,orientation,changed" "";
      }
      program { name: "change_to_portrait";
         action: STATE_SET "default" 0.0;
         target: "base";
         after: "orientation_change";
      }
      program { name: "landscape_mode";
         source: "elm";
         signal: "elm,state,orient,90";
         after: "change_to_landscape";
      }
      program { name: "landscape_mode2";
         source: "elm";
         signal: "elm,state,orient,270";
         after: "change_to_landscape";
      }
      program { name: "portrait_mode";
         source: "elm";
         signal: "elm,state,orient,0";
         after: "change_to_portrait";
      }
      program { name: "portrait_mode2";
         source: "elm";
         signal: "elm,state,orient,180";
         after: "change_to_portrait";
      }
   }
}

// content
group { name: "elm/popup/content/default";
   parts{
      part { name:"elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
   }
}

// label
group { name: "elm/label/base/popup/default";
   styles {
      style { name: "textblock_style";
         base: "font=Tizen:style=Regular font_size="POPUP_DESCRIPTION_DEFAULT_TEXT_FONT_SIZE_INC" align=center color=#FFF wrap=mixed color_class=popup/default/text_content";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "b" "+ font_weight=Bold";
         tag:  "tab" "\t";
      }
   }
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            text {
               style: "textblock_style";
               min: 0 1;
            }
         }
      }
   }
}

// button
group { name: "elm/popup/buttons1/popup/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part{ name:"elm.swallow.content.button1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
   }
}

group { name: "elm/popup/buttons2/popup/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name:"elm.swallow.content.button1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            rel1 {
               relative: 0.0 0.5;
               to: "pad";
            }
            rel2 {
               relative: 0.0 0.5;
               to: "pad";
            }
            align: 1.0 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
      part { name: "pad";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            min: POPUP_BUTTON_PADDING_SIZE;
         }
      }
      part{ name:"elm.swallow.content.button2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            rel1 {
               relative: 1.0 0.5;
               to: "pad";
            }
            rel2 {
               relative: 1.0 0.5;
               to: "pad";
            }
            align: 0.0 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
   }
}

group { name: "elm/popup/buttons3/popup/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name:"elm.swallow.content.button1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.5;
               to: "pad.left";
            }
            rel2 {
               relative: 0.0 0.5;
               to: "pad.left";
            }
            align: 1.0 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
      part { name: "pad.left";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.5;
               to: "elm.swallow.content.button2";
            }
            rel2 {
               relative: 0.0 0.5;
               to: "elm.swallow.content.button2";
            }
            align: 1.0 0.5;
            min: POPUP_BUTTON_PADDING_SIZE;
         }
      }
      part{ name:"elm.swallow.content.button2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
      part { name: "pad.right";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.5;
               to: "elm.swallow.content.button2";
            }
            rel2 {
               relative: 1.0 0.5;
               to: "elm.swallow.content.button2";
            }
            align: 0.0 0.5;
            min: POPUP_BUTTON_PADDING_SIZE;
         }
      }
      part{ name:"elm.swallow.content.button3";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.5;
               to: "pad.right";
            }
            rel2 {
               relative: 1.0 0.5;
               to: "pad.right";
            }
            align: 0.0 0.5;
            min: POPUP_BUTTON_MIN_SIZE;
         }
      }
   }
}
