/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*****************************************************************************
Document: Tizen TV_General Guide_GUI Guideline_v1.0_140508_1.ppt, Page no. 77,
******************************************************************************/
#define RADIO_SIZE 38 38
#define RADIO_FONT_SIZE 24

group { name: "elm/radio/base/default";
   images {
      image: "radiobtn_on_nor.png" COMP;
      image: "radiobtn_off_nor.png" COMP;
      image: "radiobtn_off_foc.png" COMP;
      image: "radiobtn_on_foc.png" COMP;
   }
   data.item: "focus_highlight" "on";
   script {
      public is_focus = 0;
      public is_checkd = 0;
      public set_focus() {
         set_int(is_focus, 1);
      }
      public unset_focus() {
         set_int(is_focus, 0);
      }
      public set_check_set() {
         set_state(PART:"bg", "invisible", 0.0);
         if (get_int(is_focus)) {
            set_state(PART:"radio", "highlight", 0.0);
         }
         else {
            set_state(PART:"radio", "visible", 0.0);
         }
      }
      public set_check_unset() {
         set_state(PART:"radio", "default", 0.0);
         if (get_int(is_focus)) {
            set_state(PART:"bg", "highlight", 0.0);
         }
         else {
            set_state(PART:"bg", "default", 0.0);
         }
      }
   }
   parts {
      part { name: "background";
         mouse_events: 0;
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            rel.to: "bg";
            color_class: "radio/default/bg";
         }
      }
      part { name: "bg";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.5;
            min: RADIO_SIZE;
            max: RADIO_SIZE;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            image.normal: "radiobtn_off_nor.png";
            color_class: "radio/default/stroke";
         }
         description { state: "invisible" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
            image.normal: "radiobtn_off_foc.png";
            color_class: "radio/default/stroke_focused";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color_class: "radio/default/stroke_disabled";
         }
      }
      part { name: "radio";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "radiobtn_on_nor.png";
            visible: 0;
            color_class: "radio/default/icon";
         }
         description { state: "highlight" 0.0;
            inherit: "default" 0.0;
            image.normal: "radiobtn_on_foc.png";
            visible: 1;
            color_class: "radio/default/icon_focused";
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            max: 0 0;
            rel1.to_x: "bg";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 1;
            rel2.to_x: "bg";
            rel2.offset: 1 -2;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            min: RADIO_SIZE;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
            visible: 1;
            aspect: 1.0 1.0;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
            color: 0 0 0 255;
            text { font: FONT_M;
               size: RADIO_FONT_SIZE;
               min: 0 0;
               align: -1.0 0.5;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
            text.ellipsis: -1;
         }
      }
      part { name: "events";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "click";
         signal: "mouse,clicked,1";
         source: "events";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "";
      }
      program { name: "radio_on";
         signal: "elm,state,radio,on";
         source: "elm";
         script{
            set_check_set();
         }
      }
      program { name: "radio_off";
         signal: "elm,state,radio,off";
         source: "elm";
         script{
            set_check_unset();
         }
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action:  STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "bg";
         target: "bg";
         target: "disabler";
         after: "disable_text";
      }
      program { name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         after:  "enable_text";
      }
      program { name: "enable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
               set_state(PART:"elm.text", "visible", 0.0);
            else
               set_state(PART:"elm.text", "default", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
               set_state(PART:"elm.swallow.content", "default", 0.0);
         }
      }
      program { name: "focused";
        signal: "elm,action,focus"; source: "elm";
        script {
            set_focus();
        }
        after: "enable_focus";
      }
      program { name: "enable_focus";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (!strcmp(st, "default"))
               set_state(PART:"bg", "highlight", 0.0);

            get_state(PART:"radio", st, 30, vl);
            if (!strcmp(st, "visible")) {
               set_state(PART:"radio", "highlight", 0.0);
               set_state(PART:"bg", "invisible", 0.0);
            }
         }
      }
      program { name: "unfocused";
         signal: "elm,action,unfocus"; source: "elm";
         script {
            unset_focus();
         }
         after: "disable_focus";
      }
      program { name: "disable_focus";
         script {
         new st[31];
         new Float:vl;
         get_state(PART:"bg", st, 30, vl);
         if (!strcmp(st, "highlight"))
            set_state(PART:"bg", "default", 0.0);

         get_state(PART:"radio", st, 30, vl);
         if (!strcmp(st, "highlight"))
            set_state(PART:"radio", "visible", 0.0);
         }
      }
   }
}
